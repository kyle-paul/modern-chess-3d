#pragma once
#include <memory>
#include "Core/Render/VertexArray.h"
#include "Core/Render/Buffer.h"

class Board
{
public:
    Board();
    Board(const Board& board);
    ~Board();

    void Init();

    void RenderChessBoard();
    void RenderChessPieces();
    void RenderMoveToSquare();
    void RenderValidMove();
    bool MovePlayer();

private:
    float vertices[36 * 6] = {
        // Base of the chessboard
        -5.0, -5.0, 0.0, 0.55, 0.24, 0.09,
        -5.0,  5.0, 0.0, 0.55, 0.24, 0.09,
        5.0,  5.0, 0.0, 0.55, 0.24, 0.09,
        5.0, -5.0, 0.0, 0.55, 0.24, 0.09,

        // Top of the chessboard
        -4.0, -4.0, 0.5, 0.803, 0.522, 0.247,
        -4.5, -4.5, 0.5, 0.545, 0.271, 0.075,
        -4.5,  4.5, 0.5, 0.545, 0.271, 0.075,
        -4.0,  4.0, 0.5, 0.803, 0.522, 0.247,

        -4.0,  4.0, 0.5, 0.803, 0.522, 0.247,
        -4.5,  4.5, 0.5, 0.545, 0.271, 0.075,
        4.5,  4.5, 0.5, 0.545, 0.271, 0.075,
        4.0,  4.0, 0.5, 0.803, 0.522, 0.247,

        4.0,  4.0, 0.5, 0.803, 0.522, 0.247,
        4.5,  4.5, 0.5, 0.545, 0.271, 0.075,
        4.5, -4.5, 0.5, 0.545, 0.271, 0.075,
        4.0, -4.0, 0.5, 0.803, 0.522, 0.247,

        4.0, -4.0, 0.5, 0.803, 0.522, 0.247,
        4.5, -4.5, 0.5, 0.545, 0.271, 0.075,
        -4.5, -4.5, 0.5, 0.545, 0.271, 0.075,
        -4.0, -4.0, 0.5, 0.803, 0.522, 0.247,

        // Sides of the chessboard
        -4.5, -4.5, 0.5, 0.545, 0.271, 0.075,
        -5.0, -5.0, 0.0, 0.35, 0.15, 0.06,
        -5.0,  5.0, 0.0, 0.35, 0.15, 0.06,
        -4.5,  4.5, 0.5, 0.545, 0.271, 0.075,

        -4.5,  4.5, 0.5, 0.545, 0.271, 0.075,
        -5.0,  5.0, 0.0, 0.35, 0.15, 0.06,
        5.0,  5.0, 0.0, 0.35, 0.15, 0.06,
        4.5,  4.5, 0.5, 0.545, 0.271, 0.075,

        4.5,  4.5, 0.5, 0.545, 0.271, 0.075,
        5.0,  5.0, 0.0, 0.35, 0.15, 0.06,
        5.0, -5.0, 0.0, 0.35, 0.15, 0.06,
        4.5, -4.5, 0.5, 0.545, 0.271, 0.075,

        4.5, -4.5, 0.5, 0.545, 0.271, 0.075,
        5.0, -5.0, 0.0, 0.35, 0.15, 0.06,
        -5.0, -5.0, 0.0, 0.35, 0.15, 0.06,
        -4.5, -4.5, 0.5, 0.545, 0.271, 0.075
    };

private:
    std::shared_ptr<VertexArray> boardVA;
    std::shared_ptr<VertexBuffer> boardVB;
    std::shared_ptr<IndexBuffer> boardIB;

public:
    const int MIN_COL_INDEX = 1;
    const int MIN_ROW_INDEX = 1;
    const int MAX_COL_INDEX = 8;
    const int MAX_ROW_INDEX = 8;
};